#!/bin/bash

#TODO: glitch on git pull causes i3vars to not update
#properly when the oold config and the new config come
#from differently sized source files

# because I'm constructing the session's i3config from a
# base config file, a stored variable informing us what
# lines to comment out, and an extras file concatonated
# onto the end of the base config, I need a way to save
# any and all changes I make to the session's config so
# they will remain persistent into the next session

# why am I doing it this way? because I find myself
# frequently setting something up on my laptop and
# wanting to migrate those settings to my desktop which
# takes a whole lot of remembering what all I setup and
# where. this simplifies that process while also cutting
# down on having a ton of duplicate configurations in this
# repo. I like consistency across multiple environments,
# using a base configuration file with all my main
# settings and adding machine specific settings on top
# simplifies a lot of my configuration process. plus this
# script automatically implements changes that have been
# made in the git repo

# make a backup of our current configuration so we have
# something to diff against for changes
builtin cd $HOME/.config/i3
source ./.i3vars
cp config oldconf
i3-setup.sh
# check if there's been an external update to the source
# configuration files and if so, perform the rest of the
# script before letting the user input further changes
DIFFS="$(sdiff -l config oldconf | cat -n | grep -v -e '($')"
if [ -z "$DIFFS" ]; then
    vim oldconf
else
	echo "Unresolved changes detected. Resolving."
	echo "If you still want to make changes, please run this script again after completion."
	i3restart
	exit
fi

# check if there are any differences and thus if we need
# to update our variables
DIFFS="$(sdiff -l config oldconf | cat -n | grep -v -e '($')"
if [ -z "$DIFFS" ]; then
	echo "no update necessary"
	rm oldconf
	exit
fi

# get linecount of main config so we can later determine
# which file a change was implemented in
MAINLC=$(wc -l .mainconf | awk '{ print $1 }')

# create the list of new lines and whether they're being
# added, removed, or commented out
NEWLINES=()
while read LINE; do
	NEWLINES+=("$LINE")
done <<< $(echo "$DIFFS")

# create a new array housing all the lines that get commented
# out when concatonating the base config and extra config to
# make the sessions' i3config
# also add/remove any new lines created/deleted during this
# session to/from the base and extra configs as needed
# TODO: adjust line numbers on line delete/add

i=0
j=0
for EACH in "${NEWLINES[@]}"; do
	NEWLINE=$(($(echo "$EACH" | awk '{ print $1 }')-$j))
	DESTFILE=".mainconf"
    echo "Line $NEWLINE"
    echo "i $i j $j"
    while [ -n "$i3LINES" ] && [ $(($i3LINES+$i-$j)) -lt $NEWLINE ]; do
        NEWARR+=($(($i3LINES+$i-$j)))
		i3LINES=("${i3LINES[@]:1}")
	done
	case "${NEWLINES[0]}" in
		*'>'*) # append
            echo "Append"
			NEWCONF=$(sed -n "$NEWLINE{p;q}" oldconf)
			[ $MAINLC -lt $NEWLINE ] && NEWLINE=$(($NEWLINE-$MAINLC)) && DESTFILE=".extraconf"
			if [ -n "$NEWCONF" ]; then
               	sed -i --follow-symlinks "$NEWLINE i $NEWCONF" $DESTFILE
			else
				sed -i --follow-symlinks "$((NEWLINE-1)) G" $DESTFILE
			fi
			echo "$NEWLINE $DESTFILE"
			i=$(($i+1))
			;;
		*'<'*) # remove
			[ $MAINLC -lt $NEWLINE ] && NEWLINE=$(($NEWLINE-$MAINLC)) && DESTFILE=".extraconf"
			sed -i --follow-symlinks "$NEWLINE d" $DESTFILE
			j=$(($j+1))
			;;
		*'|'*)
            echo "Default"
			FIELD2=$(sed "$NEWLINE q;d" oldconf)
			echo "$FIELD2"
			if [[ "$FIELD2" =~ ^[:space:]*# ]]; then
                echo "remove commentation"
				NEWARR+=("$NEWLINE")
                FIELD2=$(sed 's|#||1' <<< "$FIELD2")
			else
                echo "remove entry if needed"
				for (( k=0; k<=${#i3LINES[@]}; k++ )); do
                    echo "$NEWLINE == $((${i3LINES[$k]}))"
                    if [ $NEWLINE -eq $((${i3LINES[$k]}+$i)) ]; then
                        echo "unset"
						i3LINES=( "${i3LINES[@]:0:$k}" "${i3LINES[@]:$(($k+1))}" )
						break
					fi
				done
			fi
			[ $MAINLC -lt $NEWLINE ] && NEWLINE=$(($NEWLINE-$MAINLC)) && DESTFILE=".extraconf"
			sed -i --follow-symlinks ''"$NEWLINE"'s|.*|'"$FIELD2"'|' $DESTFILE
			;;
	esac
	NEWLINES=("${NEWLINES[@]:1}")
done
for LEFTOVER in "${i3LINES[@]}"; do
	NEWARR+=($(($i+$LEFTOVER-$j)))
done
echo "NEWARR ${NEWARR[@]}"

# finally output the list of modified lines and clean up
sed -i --follow-symlinks 's|'"export i3LINES=.*"'|'"export\ i3LINES=(${NEWARR[*]})"'|' .i3vars
rm oldconf
i3restart
